<template>
  <import src="../template/custom-component/base.wxml" />
  <template is="{{r.nodeType || 'h-element'}}" data="{{ r: r }}"></template>

  <!-- 源码
  <button
    class="cube-btn"
    bindtap="onClick"
    hover-class="{{ hoverClass }}"
    open-type="{{ openType }}">
      <slot></slot>
    </button> -->
</template>

<script>
import { createComponent } from '@mpxjs/core'

/*
  some tips:

  1. button 有个 type 属性会导致颜色等通过 class 进行样式覆盖不生效
*/
createComponent({
  // __props__: {
  //   at: Object
  // },
  options: {
    addGlobalClass: true,
    styleIsolation: 'shared'
  },
  properties: {
    at: {
      type: Object,
      value: {}
    }
  },
  data: {
    r: {}
  },
  watch: {
    at: {
      handler() {
        setTimeout(() => {
          this.$render()
        })
      },
      immediate: true
    }
  },
  methods: {
    onClick() {
      console.log('click custom cube-button and trigger click event')
      // 事件需要做一层代理
      // triggerEvent 实际是派发自定义的事件
      this.triggerEvent('click', { event: 'button' })
    },
    $render() {
      const vnode = this.__c(
        'button',
        {
          class: 'cube-btn',
          isElement: true,
          'open-type': this['open-type'],
          eventMap: {
            /*
              1. 判断是否为原生的组件
              2. 如果是原生的组件，在生成 render 函数的时候，需要将事件做一层映射
            */
            tap: 'onClick'
          }
        },
        [
          {
            content: 'this is custom cube-btn'
          }
        ]
      )

      this.r = vnode
    }
  }
})
</script>

<style lang="stylus"></style>

<script type="application/json">
{
  "component": true,
  "usingComponents": {}
}
</script>
